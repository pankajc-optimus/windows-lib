//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace NotifyMe.NotificationWebService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="NotificationWebService.NotificationServiceSoap")]
    public interface NotificationServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/SaveToDeviceList", ReplyAction="*")]
        System.IAsyncResult BeginSaveToDeviceList(NotifyMe.NotificationWebService.SaveToDeviceListRequest request, System.AsyncCallback callback, object asyncState);
        
        NotifyMe.NotificationWebService.SaveToDeviceListResponse EndSaveToDeviceList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/RemoveFromDeviceList", ReplyAction="*")]
        System.IAsyncResult BeginRemoveFromDeviceList(NotifyMe.NotificationWebService.RemoveFromDeviceListRequest request, System.AsyncCallback callback, object asyncState);
        
        NotifyMe.NotificationWebService.RemoveFromDeviceListResponse EndRemoveFromDeviceList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/Notification", ReplyAction="*")]
        System.IAsyncResult BeginNotification(NotifyMe.NotificationWebService.NotificationRequest request, System.AsyncCallback callback, object asyncState);
        
        NotifyMe.NotificationWebService.NotificationResponse EndNotification(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/NotificationParam", ReplyAction="*")]
        System.IAsyncResult BeginNotificationParam(NotifyMe.NotificationWebService.NotificationParamRequest request, System.AsyncCallback callback, object asyncState);
        
        NotifyMe.NotificationWebService.NotificationParamResponse EndNotificationParam(System.IAsyncResult result);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SaveToDeviceListRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="SaveToDeviceList", Namespace="http://tempuri.org/", Order=0)]
        public NotifyMe.NotificationWebService.SaveToDeviceListRequestBody Body;
        
        public SaveToDeviceListRequest() {
        }
        
        public SaveToDeviceListRequest(NotifyMe.NotificationWebService.SaveToDeviceListRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class SaveToDeviceListRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string deviceID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string subscribeUri;
        
        public SaveToDeviceListRequestBody() {
        }
        
        public SaveToDeviceListRequestBody(string deviceID, string subscribeUri) {
            this.deviceID = deviceID;
            this.subscribeUri = subscribeUri;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SaveToDeviceListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="SaveToDeviceListResponse", Namespace="http://tempuri.org/", Order=0)]
        public NotifyMe.NotificationWebService.SaveToDeviceListResponseBody Body;
        
        public SaveToDeviceListResponse() {
        }
        
        public SaveToDeviceListResponse(NotifyMe.NotificationWebService.SaveToDeviceListResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class SaveToDeviceListResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool SaveToDeviceListResult;
        
        public SaveToDeviceListResponseBody() {
        }
        
        public SaveToDeviceListResponseBody(bool SaveToDeviceListResult) {
            this.SaveToDeviceListResult = SaveToDeviceListResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class RemoveFromDeviceListRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="RemoveFromDeviceList", Namespace="http://tempuri.org/", Order=0)]
        public NotifyMe.NotificationWebService.RemoveFromDeviceListRequestBody Body;
        
        public RemoveFromDeviceListRequest() {
        }
        
        public RemoveFromDeviceListRequest(NotifyMe.NotificationWebService.RemoveFromDeviceListRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class RemoveFromDeviceListRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string deviceID;
        
        public RemoveFromDeviceListRequestBody() {
        }
        
        public RemoveFromDeviceListRequestBody(string deviceID) {
            this.deviceID = deviceID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class RemoveFromDeviceListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="RemoveFromDeviceListResponse", Namespace="http://tempuri.org/", Order=0)]
        public NotifyMe.NotificationWebService.RemoveFromDeviceListResponseBody Body;
        
        public RemoveFromDeviceListResponse() {
        }
        
        public RemoveFromDeviceListResponse(NotifyMe.NotificationWebService.RemoveFromDeviceListResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class RemoveFromDeviceListResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool RemoveFromDeviceListResult;
        
        public RemoveFromDeviceListResponseBody() {
        }
        
        public RemoveFromDeviceListResponseBody(bool RemoveFromDeviceListResult) {
            this.RemoveFromDeviceListResult = RemoveFromDeviceListResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class NotificationRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="Notification", Namespace="http://tempuri.org/", Order=0)]
        public NotifyMe.NotificationWebService.NotificationRequestBody Body;
        
        public NotificationRequest() {
        }
        
        public NotificationRequest(NotifyMe.NotificationWebService.NotificationRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class NotificationRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string title;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string message;
        
        public NotificationRequestBody() {
        }
        
        public NotificationRequestBody(string title, string message) {
            this.title = title;
            this.message = message;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class NotificationResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="NotificationResponse", Namespace="http://tempuri.org/", Order=0)]
        public NotifyMe.NotificationWebService.NotificationResponseBody Body;
        
        public NotificationResponse() {
        }
        
        public NotificationResponse(NotifyMe.NotificationWebService.NotificationResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class NotificationResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool NotificationResult;
        
        public NotificationResponseBody() {
        }
        
        public NotificationResponseBody(bool NotificationResult) {
            this.NotificationResult = NotificationResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class NotificationParamRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="NotificationParam", Namespace="http://tempuri.org/", Order=0)]
        public NotifyMe.NotificationWebService.NotificationParamRequestBody Body;
        
        public NotificationParamRequest() {
        }
        
        public NotificationParamRequest(NotifyMe.NotificationWebService.NotificationParamRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class NotificationParamRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string title;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string message;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string param;
        
        public NotificationParamRequestBody() {
        }
        
        public NotificationParamRequestBody(string title, string message, string param) {
            this.title = title;
            this.message = message;
            this.param = param;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class NotificationParamResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="NotificationParamResponse", Namespace="http://tempuri.org/", Order=0)]
        public NotifyMe.NotificationWebService.NotificationParamResponseBody Body;
        
        public NotificationParamResponse() {
        }
        
        public NotificationParamResponse(NotifyMe.NotificationWebService.NotificationParamResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class NotificationParamResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool NotificationParamResult;
        
        public NotificationParamResponseBody() {
        }
        
        public NotificationParamResponseBody(bool NotificationParamResult) {
            this.NotificationParamResult = NotificationParamResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface NotificationServiceSoapChannel : NotifyMe.NotificationWebService.NotificationServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaveToDeviceListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveToDeviceListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RemoveFromDeviceListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RemoveFromDeviceListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public NotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NotificationParamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public NotificationParamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NotificationServiceSoapClient : System.ServiceModel.ClientBase<NotifyMe.NotificationWebService.NotificationServiceSoap>, NotifyMe.NotificationWebService.NotificationServiceSoap {
        
        private BeginOperationDelegate onBeginSaveToDeviceListDelegate;
        
        private EndOperationDelegate onEndSaveToDeviceListDelegate;
        
        private System.Threading.SendOrPostCallback onSaveToDeviceListCompletedDelegate;
        
        private BeginOperationDelegate onBeginRemoveFromDeviceListDelegate;
        
        private EndOperationDelegate onEndRemoveFromDeviceListDelegate;
        
        private System.Threading.SendOrPostCallback onRemoveFromDeviceListCompletedDelegate;
        
        private BeginOperationDelegate onBeginNotificationDelegate;
        
        private EndOperationDelegate onEndNotificationDelegate;
        
        private System.Threading.SendOrPostCallback onNotificationCompletedDelegate;
        
        private BeginOperationDelegate onBeginNotificationParamDelegate;
        
        private EndOperationDelegate onEndNotificationParamDelegate;
        
        private System.Threading.SendOrPostCallback onNotificationParamCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public NotificationServiceSoapClient() {
        }
        
        public NotificationServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public NotificationServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NotificationServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NotificationServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<SaveToDeviceListCompletedEventArgs> SaveToDeviceListCompleted;
        
        public event System.EventHandler<RemoveFromDeviceListCompletedEventArgs> RemoveFromDeviceListCompleted;
        
        public event System.EventHandler<NotificationCompletedEventArgs> NotificationCompleted;
        
        public event System.EventHandler<NotificationParamCompletedEventArgs> NotificationParamCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NotifyMe.NotificationWebService.NotificationServiceSoap.BeginSaveToDeviceList(NotifyMe.NotificationWebService.SaveToDeviceListRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveToDeviceList(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginSaveToDeviceList(string deviceID, string subscribeUri, System.AsyncCallback callback, object asyncState) {
            NotifyMe.NotificationWebService.SaveToDeviceListRequest inValue = new NotifyMe.NotificationWebService.SaveToDeviceListRequest();
            inValue.Body = new NotifyMe.NotificationWebService.SaveToDeviceListRequestBody();
            inValue.Body.deviceID = deviceID;
            inValue.Body.subscribeUri = subscribeUri;
            return ((NotifyMe.NotificationWebService.NotificationServiceSoap)(this)).BeginSaveToDeviceList(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NotifyMe.NotificationWebService.SaveToDeviceListResponse NotifyMe.NotificationWebService.NotificationServiceSoap.EndSaveToDeviceList(System.IAsyncResult result) {
            return base.Channel.EndSaveToDeviceList(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private bool EndSaveToDeviceList(System.IAsyncResult result) {
            NotifyMe.NotificationWebService.SaveToDeviceListResponse retVal = ((NotifyMe.NotificationWebService.NotificationServiceSoap)(this)).EndSaveToDeviceList(result);
            return retVal.Body.SaveToDeviceListResult;
        }
        
        private System.IAsyncResult OnBeginSaveToDeviceList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string deviceID = ((string)(inValues[0]));
            string subscribeUri = ((string)(inValues[1]));
            return this.BeginSaveToDeviceList(deviceID, subscribeUri, callback, asyncState);
        }
        
        private object[] OnEndSaveToDeviceList(System.IAsyncResult result) {
            bool retVal = this.EndSaveToDeviceList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveToDeviceListCompleted(object state) {
            if ((this.SaveToDeviceListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveToDeviceListCompleted(this, new SaveToDeviceListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveToDeviceListAsync(string deviceID, string subscribeUri) {
            this.SaveToDeviceListAsync(deviceID, subscribeUri, null);
        }
        
        public void SaveToDeviceListAsync(string deviceID, string subscribeUri, object userState) {
            if ((this.onBeginSaveToDeviceListDelegate == null)) {
                this.onBeginSaveToDeviceListDelegate = new BeginOperationDelegate(this.OnBeginSaveToDeviceList);
            }
            if ((this.onEndSaveToDeviceListDelegate == null)) {
                this.onEndSaveToDeviceListDelegate = new EndOperationDelegate(this.OnEndSaveToDeviceList);
            }
            if ((this.onSaveToDeviceListCompletedDelegate == null)) {
                this.onSaveToDeviceListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveToDeviceListCompleted);
            }
            base.InvokeAsync(this.onBeginSaveToDeviceListDelegate, new object[] {
                        deviceID,
                        subscribeUri}, this.onEndSaveToDeviceListDelegate, this.onSaveToDeviceListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NotifyMe.NotificationWebService.NotificationServiceSoap.BeginRemoveFromDeviceList(NotifyMe.NotificationWebService.RemoveFromDeviceListRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRemoveFromDeviceList(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginRemoveFromDeviceList(string deviceID, System.AsyncCallback callback, object asyncState) {
            NotifyMe.NotificationWebService.RemoveFromDeviceListRequest inValue = new NotifyMe.NotificationWebService.RemoveFromDeviceListRequest();
            inValue.Body = new NotifyMe.NotificationWebService.RemoveFromDeviceListRequestBody();
            inValue.Body.deviceID = deviceID;
            return ((NotifyMe.NotificationWebService.NotificationServiceSoap)(this)).BeginRemoveFromDeviceList(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NotifyMe.NotificationWebService.RemoveFromDeviceListResponse NotifyMe.NotificationWebService.NotificationServiceSoap.EndRemoveFromDeviceList(System.IAsyncResult result) {
            return base.Channel.EndRemoveFromDeviceList(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private bool EndRemoveFromDeviceList(System.IAsyncResult result) {
            NotifyMe.NotificationWebService.RemoveFromDeviceListResponse retVal = ((NotifyMe.NotificationWebService.NotificationServiceSoap)(this)).EndRemoveFromDeviceList(result);
            return retVal.Body.RemoveFromDeviceListResult;
        }
        
        private System.IAsyncResult OnBeginRemoveFromDeviceList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string deviceID = ((string)(inValues[0]));
            return this.BeginRemoveFromDeviceList(deviceID, callback, asyncState);
        }
        
        private object[] OnEndRemoveFromDeviceList(System.IAsyncResult result) {
            bool retVal = this.EndRemoveFromDeviceList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRemoveFromDeviceListCompleted(object state) {
            if ((this.RemoveFromDeviceListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RemoveFromDeviceListCompleted(this, new RemoveFromDeviceListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RemoveFromDeviceListAsync(string deviceID) {
            this.RemoveFromDeviceListAsync(deviceID, null);
        }
        
        public void RemoveFromDeviceListAsync(string deviceID, object userState) {
            if ((this.onBeginRemoveFromDeviceListDelegate == null)) {
                this.onBeginRemoveFromDeviceListDelegate = new BeginOperationDelegate(this.OnBeginRemoveFromDeviceList);
            }
            if ((this.onEndRemoveFromDeviceListDelegate == null)) {
                this.onEndRemoveFromDeviceListDelegate = new EndOperationDelegate(this.OnEndRemoveFromDeviceList);
            }
            if ((this.onRemoveFromDeviceListCompletedDelegate == null)) {
                this.onRemoveFromDeviceListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRemoveFromDeviceListCompleted);
            }
            base.InvokeAsync(this.onBeginRemoveFromDeviceListDelegate, new object[] {
                        deviceID}, this.onEndRemoveFromDeviceListDelegate, this.onRemoveFromDeviceListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NotifyMe.NotificationWebService.NotificationServiceSoap.BeginNotification(NotifyMe.NotificationWebService.NotificationRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginNotification(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginNotification(string title, string message, System.AsyncCallback callback, object asyncState) {
            NotifyMe.NotificationWebService.NotificationRequest inValue = new NotifyMe.NotificationWebService.NotificationRequest();
            inValue.Body = new NotifyMe.NotificationWebService.NotificationRequestBody();
            inValue.Body.title = title;
            inValue.Body.message = message;
            return ((NotifyMe.NotificationWebService.NotificationServiceSoap)(this)).BeginNotification(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NotifyMe.NotificationWebService.NotificationResponse NotifyMe.NotificationWebService.NotificationServiceSoap.EndNotification(System.IAsyncResult result) {
            return base.Channel.EndNotification(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private bool EndNotification(System.IAsyncResult result) {
            NotifyMe.NotificationWebService.NotificationResponse retVal = ((NotifyMe.NotificationWebService.NotificationServiceSoap)(this)).EndNotification(result);
            return retVal.Body.NotificationResult;
        }
        
        private System.IAsyncResult OnBeginNotification(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string title = ((string)(inValues[0]));
            string message = ((string)(inValues[1]));
            return this.BeginNotification(title, message, callback, asyncState);
        }
        
        private object[] OnEndNotification(System.IAsyncResult result) {
            bool retVal = this.EndNotification(result);
            return new object[] {
                    retVal};
        }
        
        private void OnNotificationCompleted(object state) {
            if ((this.NotificationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.NotificationCompleted(this, new NotificationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void NotificationAsync(string title, string message) {
            this.NotificationAsync(title, message, null);
        }
        
        public void NotificationAsync(string title, string message, object userState) {
            if ((this.onBeginNotificationDelegate == null)) {
                this.onBeginNotificationDelegate = new BeginOperationDelegate(this.OnBeginNotification);
            }
            if ((this.onEndNotificationDelegate == null)) {
                this.onEndNotificationDelegate = new EndOperationDelegate(this.OnEndNotification);
            }
            if ((this.onNotificationCompletedDelegate == null)) {
                this.onNotificationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnNotificationCompleted);
            }
            base.InvokeAsync(this.onBeginNotificationDelegate, new object[] {
                        title,
                        message}, this.onEndNotificationDelegate, this.onNotificationCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NotifyMe.NotificationWebService.NotificationServiceSoap.BeginNotificationParam(NotifyMe.NotificationWebService.NotificationParamRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginNotificationParam(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginNotificationParam(string title, string message, string param, System.AsyncCallback callback, object asyncState) {
            NotifyMe.NotificationWebService.NotificationParamRequest inValue = new NotifyMe.NotificationWebService.NotificationParamRequest();
            inValue.Body = new NotifyMe.NotificationWebService.NotificationParamRequestBody();
            inValue.Body.title = title;
            inValue.Body.message = message;
            inValue.Body.param = param;
            return ((NotifyMe.NotificationWebService.NotificationServiceSoap)(this)).BeginNotificationParam(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NotifyMe.NotificationWebService.NotificationParamResponse NotifyMe.NotificationWebService.NotificationServiceSoap.EndNotificationParam(System.IAsyncResult result) {
            return base.Channel.EndNotificationParam(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private bool EndNotificationParam(System.IAsyncResult result) {
            NotifyMe.NotificationWebService.NotificationParamResponse retVal = ((NotifyMe.NotificationWebService.NotificationServiceSoap)(this)).EndNotificationParam(result);
            return retVal.Body.NotificationParamResult;
        }
        
        private System.IAsyncResult OnBeginNotificationParam(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string title = ((string)(inValues[0]));
            string message = ((string)(inValues[1]));
            string param = ((string)(inValues[2]));
            return this.BeginNotificationParam(title, message, param, callback, asyncState);
        }
        
        private object[] OnEndNotificationParam(System.IAsyncResult result) {
            bool retVal = this.EndNotificationParam(result);
            return new object[] {
                    retVal};
        }
        
        private void OnNotificationParamCompleted(object state) {
            if ((this.NotificationParamCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.NotificationParamCompleted(this, new NotificationParamCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void NotificationParamAsync(string title, string message, string param) {
            this.NotificationParamAsync(title, message, param, null);
        }
        
        public void NotificationParamAsync(string title, string message, string param, object userState) {
            if ((this.onBeginNotificationParamDelegate == null)) {
                this.onBeginNotificationParamDelegate = new BeginOperationDelegate(this.OnBeginNotificationParam);
            }
            if ((this.onEndNotificationParamDelegate == null)) {
                this.onEndNotificationParamDelegate = new EndOperationDelegate(this.OnEndNotificationParam);
            }
            if ((this.onNotificationParamCompletedDelegate == null)) {
                this.onNotificationParamCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnNotificationParamCompleted);
            }
            base.InvokeAsync(this.onBeginNotificationParamDelegate, new object[] {
                        title,
                        message,
                        param}, this.onEndNotificationParamDelegate, this.onNotificationParamCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override NotifyMe.NotificationWebService.NotificationServiceSoap CreateChannel() {
            return new NotificationServiceSoapClientChannel(this);
        }
        
        private class NotificationServiceSoapClientChannel : ChannelBase<NotifyMe.NotificationWebService.NotificationServiceSoap>, NotifyMe.NotificationWebService.NotificationServiceSoap {
            
            public NotificationServiceSoapClientChannel(System.ServiceModel.ClientBase<NotifyMe.NotificationWebService.NotificationServiceSoap> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginSaveToDeviceList(NotifyMe.NotificationWebService.SaveToDeviceListRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("SaveToDeviceList", _args, callback, asyncState);
                return _result;
            }
            
            public NotifyMe.NotificationWebService.SaveToDeviceListResponse EndSaveToDeviceList(System.IAsyncResult result) {
                object[] _args = new object[0];
                NotifyMe.NotificationWebService.SaveToDeviceListResponse _result = ((NotifyMe.NotificationWebService.SaveToDeviceListResponse)(base.EndInvoke("SaveToDeviceList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRemoveFromDeviceList(NotifyMe.NotificationWebService.RemoveFromDeviceListRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("RemoveFromDeviceList", _args, callback, asyncState);
                return _result;
            }
            
            public NotifyMe.NotificationWebService.RemoveFromDeviceListResponse EndRemoveFromDeviceList(System.IAsyncResult result) {
                object[] _args = new object[0];
                NotifyMe.NotificationWebService.RemoveFromDeviceListResponse _result = ((NotifyMe.NotificationWebService.RemoveFromDeviceListResponse)(base.EndInvoke("RemoveFromDeviceList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginNotification(NotifyMe.NotificationWebService.NotificationRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("Notification", _args, callback, asyncState);
                return _result;
            }
            
            public NotifyMe.NotificationWebService.NotificationResponse EndNotification(System.IAsyncResult result) {
                object[] _args = new object[0];
                NotifyMe.NotificationWebService.NotificationResponse _result = ((NotifyMe.NotificationWebService.NotificationResponse)(base.EndInvoke("Notification", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginNotificationParam(NotifyMe.NotificationWebService.NotificationParamRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("NotificationParam", _args, callback, asyncState);
                return _result;
            }
            
            public NotifyMe.NotificationWebService.NotificationParamResponse EndNotificationParam(System.IAsyncResult result) {
                object[] _args = new object[0];
                NotifyMe.NotificationWebService.NotificationParamResponse _result = ((NotifyMe.NotificationWebService.NotificationParamResponse)(base.EndInvoke("NotificationParam", _args, result)));
                return _result;
            }
        }
    }
}
